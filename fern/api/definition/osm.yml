# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

services:
  http:
    OsmService:
      base-path: /osm
      auth: true
      endpoints:
        extractFeatures:
          display-name: Extract Features
          docs: | 
            This endpoint downloads features from OpenStreetMap based on tags and optionally a bounding box, resulting in a GeoJSON.
            This API extracts features from the OpenStreetMap database and formats them as GeoJSON.
            You can filter for any tag in the database, either as `key=value` or `key=*`, and can chain tags if you need 2+ tags.
            This endpoint is especially useful for extracting map data directly to user applications (like the browser) or as a faster alternative to [Overpass Turbo](http://overpass-turbo.eu/) and the [Overpass API](http://overpass-api.de/).
          path: /extract
          request:
            name: ExtractFeaturesRequest
            query-parameters:
              tags:
                docs: | 
                  This is a list of tags in the form `key=value` to filter features for. All features extracted will satisfy each of the passed tags given by this parameter.
                  This tag list can be created by forming an array of `key=value` items and joining them into one string with the `&` character.
                  Because both = and & are reserved characters in URIs, this list must be URL encoded.
                  An example list of tags could be `leisure=park` and `name=Westglen Park`. This matches parks that have the name Westglen Park. To set this parameter, weâ€™ll URL encode leisure=park&name=Westglen Park.
                  Documentation on tags can be found on the `TagInfo` resource website.
                type: string 
              bbox:
                docs: |
                  This is the bounding box for extracted features. The coordinates (in EPSG:4326) of the bounding box are required to be in (minimum longitude, minimum latitude, maximum longitude, maximum latitude) order. 
                  Coordinates are expressed as signed floats joined by commas.
                  An example bounding box in the US could be `-108.984375,32.026706,-103.051758,37.195331`.
                  You can create a bounding box `on bboxfinder`, or in shapely by invoking the `bounds` property on a geometry.
                type: optional<string>
              api_key:
                docs: |
                  Your account's API key. 
                  You can create an API key by registering for an account and copy and paste it from your account dashboard.
                type: string


types:
  id: string
